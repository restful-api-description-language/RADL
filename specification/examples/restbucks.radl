<?xml version="1.0" encoding="UTF-8"?>
<!--
##
## Sample RADL file for RESTBucks.
##
## Copyright Â© EMC Corporation. All rights reserved.
##
-->
<service name="RESTBucks" radl-version="1.0"
    xmlns="urn:radl:service" xmlns:radl="urn:radl:service"
    xmlns:html="http://www.w3.org/1999/xhtml">
  <documentation>
    This example service follows <html:a href="http://www.infoq.com/articles/webber-rest-workflow">RESTBucks</html:a>, 
    an online version of coffee shop Starbucks based on Gregor Hohpe's
    <html:a href="http://www.enterpriseintegrationpatterns.com/ramblings/18_starbucks.html">observation</html:a> that
    it is an asynchronous processing pipeline.
  </documentation>

  <states>
    <start-state>
      <transitions>
        <transition name="Arrive" to="Arrived">
          <documentation>The process starts when the customer walks into the store.</documentation>
        </transition>
      </transitions>
    </start-state>

    <state name="Arrived" property-group="home">
      <transitions>
        <transition name="Read menu" to="Deciding">
          <documentation>
            Once the customer has arrived in the store, she reads the menu to see what the store offers.
          </documentation>
        </transition>
      </transitions>
    </state>

    <state name="Deciding" property-group="menu">
      <transitions>
        <transition name="Place order" to="Ordered">
          <documentation>
            The customer composes an order from the items on the menu and places the order with the cashier.
          </documentation>
          <input property-group="order"/>
        </transition>
      </transitions>
    </state>

    <state name="Ordered" property-group="order">
      <transitions>
        <transition name="Change" to="Ordered">
          <documentation>As long as the customer hasn't paid, she can change her order.</documentation>
          <input property-group="order"/>
        </transition>
        <transition name="Cancel" to="Canceled">
          <documentation>
            The customer may decide she doesn't want anything after all and cancel the whole order.
          </documentation>
        </transition>
        <transition name="Pay" to="Paid">
          <documentation>The customer pays for the order.</documentation>
          <input property-group="payment"/>
        </transition>
      </transitions>
    </state>

    <state name="Canceled"/>

    <state name="Paid" property-group="receipt">
      <transitions>
        <transition name="Take receipt" to="Waiting">
          <documentation>The customer accepts the confirmation of her payment.</documentation>
        </transition>
      </transitions>
    </state>

    <state name="Waiting" property-group="serving">
      <transitions>
        <transition name="Wait" to="Waiting">
          <documentation>The customer has to wait a while.</documentation>
        </transition>
        <transition name="Receive notification" to="Served">
          <documentation>The barista notifies the customer once he has prepared her serving.</documentation>
        </transition>
      </transitions>
    </state>

    <state name="Served" property-group="serving">
      <transitions>
        <transition name="Take serving" to="Happy">
          <documentation>The customer picks up her serving.</documentation>
        </transition>
      </transitions>
    </state>

    <state name="Happy"/>
  </states>

  <link-relations>
    <link-relation name="self">
      <specification href="http://tools.ietf.org/html/rfc4287"/>
      <transitions>
        <transition ref="Receive notification"/>
        <transition ref="Wait"/>
      </transitions>
    </link-relation>

    <link-relation name="https://schema.org/ReplaceAction">
      <specification href="https://schema.org/ReplaceAction"/>
      <transitions>
        <transition ref="Change"/>
      </transitions>
    </link-relation>
    
    <link-relation name="https://schema.org/DeleteAction">
      <specification href="https://schema.org/DeleteAction"/>
      <transitions>
        <transition ref="Cancel"/>
      </transitions>
    </link-relation>
  
    <link-relation name="http://schema.org/ReceiveAction">
      <specification href="http://schema.org/ReceiveAction"/>
      <transitions>
        <transition ref="Take serving"/>
      </transitions>
    </link-relation>
    
    <link-relation name="https://schema.org/PayAction">
      <specification href="https://schema.org/PayAction"/>
      <transitions>
        <transition ref="Pay"/>
      </transitions>
    </link-relation>
  
    <link-relation name="http://schema.org/menu">
      <specification href="http://schema.org/menu"/>
      <transitions>
        <transition ref="Read menu"/>
      </transitions>
    </link-relation>

    <link-relation name="http://schema.org/OrderAction">
      <specification href="http://schema.org/OrderAction"/>
      <transitions>
        <transition ref="Place order"/>
      </transitions>
    </link-relation>

    <link-relation name="http://schema.org/Order">
      <specification href="http://schema.org/Order"/>
      <transitions>
        <transition ref="Take receipt"/>
      </transitions>
    </link-relation>
  </link-relations>

  <property-groups>
    <property-group name="home" uri="http://schema.org/CafeOrCoffeeShop"/>

    <property-group name="items">
      <property-group name="item" repeats="true" uri="http://schema.org/Product">
        <property name="name" uri="http://schema.org/name"/>
        <property name="size" uri="http://schema.org/height"/>
        <property name="milk" uri="http://www.productontology.org/doc/Milk"/>
        <property name="price" uri="http://schema.org/price"/>
        <property name="currency" uri="http://schema.org/priceCurrency"/>
      </property-group>
    </property-group>

    <property-group name="menu" uri="http://schema.org/menu">
      <property-group name="items" ref="items"/>
    </property-group>

    <property-group name="order" uri="http://schema.org/Order">
      <property-group name="items" ref="items"/>
      <property name="customer" uri="http://schema.org/customer"/>
      <property name="total" uri="http://schema.org/totalPrice"/>
      <property name="currency" uri="http://schema.org/priceCurrency"/>
    </property-group>

    <property-group name="receipt" uri="http://schema.org/Order">
      <property name="dateTime" uri="http://schema.org/orderDate"/>
      <property name="shop" uri="http://schema.org/seller"/>
      <property-group name="items" ref="items"/>
      <property name="total" uri="http://schema.org/totalPrice"/>
      <property name="currency" uri="http://schema.org/priceCurrency"/>
      <property name="paymentMethod" uri="http://schema.org/acceptedPaymentMethod"/>
    </property-group>

    <property-group name="payment" uri="http://reference.data.gov.uk/def/payment#payment">
      <property name="amount" uri="http://schema.org/totalPrice"/>
      <property name="currency" uri="http://schema.org/priceCurrency"/>
      <property name="paymentMethod" uri="http://schema.org/acceptedPaymentMethod"/>
      <property name="cardholderName" uri="https://w3id.org/creditcard/v1/name"/>
      <property name="cardNumber" uri="https://w3id.org/creditcard/v1/number"/>
      <property name="expiryMotnh" uri="https://w3id.org/creditcard/v1/expiryMonth"/>
      <property name="expiryYear" uri="https://w3id.org/creditcard/v1/expiryYear"/>
      <property name="cardSecurityCode" uri="https://w3id.org/creditcard/v1/verificationCode"/>
    </property-group>

    <property-group name="serving" uri="http://schema.org/Order"/>
  </property-groups>

  <media-types default="application/ld+json">
    <media-type name="application/ld+json">
      <specification href="http://www.w3.org/TR/json-ld/"/>
    </media-type>
  </media-types>

  <errors>
    <error name="http://errors.restbucks.com/missing-item" status-code="400">
      <documentation>The order you provided doesn't contain any menu item.</documentation>
    </error>
    <error name="http://errors.restbucks.com/unknown-item" status-code="400">
      <documentation>The menu item you requested is unknown to the server.</documentation>
    </error>
    <error name="http://errors.restbucks.com/invalid-item" status-code="400">
      <documentation>The attributes you provided are invalid for the requested menu item.</documentation>
    </error>
    <error name="http://errors.restbucks.com/item-out-of-stock" status-code="400">
      <documentation>The menu item you requested is temporarily out of stock.</documentation>
    </error>
    <error name="http://errors.restbucks.com/missing-customer" status-code="400">
      <documentation>The order you provided doesn't contain a customer name.</documentation>
    </error>
    <error name="http://errors.restbucks.com/invalid-payment" status-code="400">
      <documentation>The payment details you provided contain invalid values.</documentation>
    </error>
    <error name="http://errors.restbucks.com/overpaid" status-code="400">
      <documentation>The amount of money you paid is more than what the order costs.</documentation>
    </error>
    <error name="http://errors.restbucks.com/payment-not-processed" status-code="400">
      <documentation>The payment you provided could not be processed.</documentation>
    </error>
    <error name="http://errors.restbucks.com/already-paid" status-code="400">
      <documentation>The order is already paid and cannot be changed anymore.</documentation>
    </error>
    <error name="http://errors.restbucks.com/not-found" status-code="404">
      <documentation>The URI you requested doesn't exists or is not accessible by you.</documentation>
    </error>
    <error name="http://errors.restbucks.com/method-not-allowed" status-code="405">
      <documentation>The method you used is not supported on this URI.</documentation>
    </error>
    <error name="http://errors.restbucks.com/not-acceptible" status-code="406">
      <documentation>
        The media type you requested in the Accept header is not supported for this method on this URI.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/server-error" status-code="500">
      <documentation>
        Something went wrong on our side. We have logged the problem so our staff can look into it. We are sorry for the
        inconvenience.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/service-unavailable" status-code="503">
      <documentation>The server is temporarily not able to handle the request.</documentation>
    </error>
  </errors>

  <conventions>
    <uri-template-variables>
      <uri-template-variable name="order-id">
        <documentation>
          A unique server-generated ID for an order. The client should treat this as an opaque identifier.
        </documentation>
      </uri-template-variable>
    </uri-template-variables>
  </conventions>

  <resources>
    <resource name="Home">
      <location uri="/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Arrive"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>

    <resource name="Menu">
      <location uri="/menu/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Read menu"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>

    <resource name="Orders">
      <location uri="/orders/"/>
      <methods>
        <method name="POST">
          <transitions>
            <transition ref="Place order"/>
          </transitions>
          <request/>
          <response/>
        </method>
      </methods>
    </resource>

    <resource name="Order">
      <location uri-template="/orders/{order-id}/"/>
      <methods>
        <method name="DELETE">
          <transitions>
            <transition ref="Cancel"/>
          </transitions>
        </method>
        <method name="PUT">
          <transitions>
            <transition ref="Change"/>
          </transitions>
          <request/>
          <response/>
        </method>
        <method name="GET">
          <transitions>
            <transition ref="Take receipt"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>

    <resource name="Payments">
      <location uri-template="/orders/{order-id}/payments/"/>
      <methods>
        <method name="POST">
          <transitions>
            <transition ref="Pay"/>
          </transitions>
          <request/>
          <response/>
        </method>
      </methods>
    </resource>

    <resource name="Serving">
      <location uri-template="/orders/{order-id}/serving/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Wait"/>
            <transition ref="Receive notification"/>
          </transitions>
          <response/>
        </method>
        <method name="DELETE">
          <transitions>
            <transition ref="Take serving"/>
          </transitions>
        </method>
      </methods>
    </resource>
  </resources>
</service>
