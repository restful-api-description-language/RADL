<?xml version="1.0" encoding="UTF-8"?>
<!-- 
##
## Sample RADL file for RESTBucks.
##
## Copyright Â© EMC Corporation. All rights reserved.
##
-->
<service name="RESTBucks" xmlns="urn:radl:service" xmlns:radl="urn:radl:service" 
    xmlns:html="http://www.w3.org/1999/xhtml">
  <documentation>
    This example service follows <html:a href="http://www.infoq.com/articles/webber-rest-workflow">RESTBucks</html:a>,
    an online version of coffee shop Starbucks based on Gregor Hohpe's  
    <html:a href="http://www.enterpriseintegrationpatterns.com/ramblings/18_starbucks.html">observation</html:a>
    that it is an asynchronous processing pipeline.
  </documentation>

  <states>
    <start-state>
      <transitions>
        <transition name="Arrive" to="Arrived">
          <documentation>
            The process starts when the customer walks into the store.
          </documentation>
        </transition>
      </transitions>
    </start-state>

    <state name="Arrived">
      <transitions>
        <transition name="Read menu" to="Deciding">
          <documentation>
            Once the customer has arrived in the store, she reads the menu to see what the store offers.
          </documentation>
        </transition>
      </transitions>
    </state>

    <state name="Deciding">
      <properties ref="menu"/>
      <transitions>
        <transition name="Place order" to="Ordered">
          <documentation>
            The customer composes an order from the items on the menu and places the order with the cashier.
          </documentation>
          <input>
            <properties ref="order"/>
          </input>
        </transition>
      </transitions>
    </state>

    <state name="Ordered">
      <properties ref="order"/>
      <transitions>
        <transition name="Change" to="Ordered">
          <documentation>
            As long as the customer hasn't paid, she can change her order.
          </documentation>
          <input>
            <properties ref="order"/>
          </input>
        </transition>
        <transition name="Cancel" to="Canceled">
          <documentation>
            The customer may decide she doesn't want anything after all and cancel the whole order.
          </documentation>
        </transition>
        <transition name="Pay" to="Paid">
          <documentation>
            The customer pays for the order.
          </documentation>
          <input>
            <properties ref="payment"/>
          </input>
        </transition>
      </transitions>
    </state>

    <state name="Canceled"/>

    <state name="Paid">
      <properties ref="receipt"/>
      <transitions>
        <transition name="Take receipt" to="Waiting">
          <documentation>
            The customer accepts the confirmation of her payment.
          </documentation>
        </transition>
      </transitions>
    </state>

    <state name="Waiting">
      <transitions>
        <transition name="Wait" to="Waiting">
          <documentation>
            The customer has to wait a while.
          </documentation>
        </transition>
        <transition name="Receive notification" to="Served">
          <documentation>
            The barista notifies the customer once he has prepared her serving.
          </documentation>
        </transition>
      </transitions>
    </state>

    <state name="Served">
      <properties ref="serving"/>
      <transitions>
        <transition name="Take serving" to="Happy">
          <documentation>
            The customer picks up her serving.
          </documentation>
        </transition>
      </transitions>
    </state>

    <state name="Happy"/>
  </states>

  <link-relations>
    <link-relation name="http://api.restbucks.com/linkrel/menu">
      <transitions>
        <transition ref="Read menu"/>
      </transitions>
    </link-relation>
    <link-relation name="http://api.restbucks.com/linkrel/orders">
      <transitions>
        <transition ref="Place order"/>
      </transitions>
    </link-relation>
    <link-relation name="edit">
      <transitions>
        <transition ref="Change"/>
        <transition ref="Cancel"/>
      </transitions>
    </link-relation>
    <link-relation name="payment">
      <transitions>
        <transition ref="Pay"/>
      </transitions>
    </link-relation>
    <link-relation name="http://api.restbucks.com/linkrel/accept">
      <transitions>
        <transition ref="Take receipt"/>
        <transition ref="Take serving"/>
      </transitions>
    </link-relation>
    <link-relation name="self">
      <transitions>
        <transition ref="Wait"/>
      </transitions>
    </link-relation>
    <link-relation name="http://api.restbucks.com/linkrel/serving">
      <transitions>
        <transition ref="Receive notification"/>
      </transitions>
    </link-relation>
  </link-relations>

  <named-properties>
    <properties name="menu">
      <!-- TODO: Describe semantics and data types -->
    </properties>

    <properties name="order">
      <!-- TODO: Describe semantics and data types -->
    </properties>

    <properties name="payment">
      <!-- TODO: Describe semantics and data types -->
    </properties>

    <properties name="receipt">
      <!-- TODO: Describe semantics and data types -->
    </properties>
  </named-properties>

  <media-types default="application/ld+json">
    <media-type name="application/ld+json">
      <specification href="http://www.w3.org/TR/json-ld/"/>
    </media-type>
  </media-types>

  <errors>
    <error name="http://errors.restbucks.com/missing-item">
      <documentation>
        The order you provided doesn't contain any menu item.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/unknown-item">
      <documentation>
         The menu item you requested is unknown to the server. 
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/invalid-item">
      <documentation>
         The attributes you provided are invalid for the requested menu item.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/item-out-of-stock">
      <documentation>
         The menu item you requested is temporarily out of stock.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/missing-customer">
      <documentation>
         The order you provided doesn't contain a customer name.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/invalid-payment">
      <documentation>
         The payment details you provided contain invalid values.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/overpaid">
      <documentation>
         The amount of money you paid is more than what the order costs.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/payment-not-processed">
      <documentation>
         The payment you provided could not be processed.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/not-found">
      <documentation>
         The URI you requested doesn't exists or is not accessible by you.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/method-not-allowed">
      <documentation>
         The method you used is not supported on this URI.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/not-acceptible">
      <documentation>
         The media type you requested in the Accept header is not supported for this method on this URI.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/server-error">
      <documentation>
         Something went wrong on our side. We have logged the problem so our staff can look into it.
         We're sorry for the inconvenience.
      </documentation>
    </error>
    <error name="http://errors.restbucks.com/service-unavailable">
      <documentation>
         The server is temporarily not able to handle the request.
      </documentation>
    </error>
  </errors>
  
  <conventions>
    <uri-template-variables>
      <uri-template-variable name="order-id">
        <documentation>
          A unique server-generated ID for an order. The client should treat this as an opaque identifier.
        </documentation>
      </uri-template-variable>
    </uri-template-variables>
  </conventions>

  <resources>
    <resource name="Home">
      <location uri="/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Arrive"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>
    
    <resource name="Menu">
      <location uri="/menu/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Read menu"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>
    
    <resource name="Orders">
      <location uri="/orders/"/>
      <methods>
        <method name="POST">
          <transitions>
            <transition ref="Place order"/>
          </transitions>
          <request/>
          <response/>
        </method>
      </methods>
    </resource>
    
    <resource name="Order">
      <location uri-template="/orders/{order-id}/"/>
      <methods>
        <method name="DELETE">
          <transitions>
            <transition ref="Cancel"/>
          </transitions>
        </method>
        <method name="PUT">
          <transitions>
            <transition ref="Change"/>
          </transitions>
          <request/>
          <response/>
        </method>
        <method name="GET">
          <transitions>
            <transition ref="Take receipt"/>
          </transitions>
          <response/>
        </method>
      </methods>
    </resource>
    
    <resource name="Payments">
      <location uri-template="/orders/{order-id}/payments/"/>
      <methods>
        <method name="POST">
          <transitions>
            <transition ref="Pay"/>
          </transitions>
          <request/>
          <response/>
        </method>
      </methods>
    </resource>
    
    <resource name="Serving">
      <location uri-template="/orders/{order-id}/serving/"/>
      <methods>
        <method name="GET">
          <transitions>
            <transition ref="Wait"/>
            <transition ref="Receive notification"/>
          </transitions>
          <response/>
        </method>
        <method name="DELETE">
          <transitions>
            <transition ref="Take serving"/>
          </transitions>
        </method>
      </methods>
    </resource>
  </resources>
</service>
