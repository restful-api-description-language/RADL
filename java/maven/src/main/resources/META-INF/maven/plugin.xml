<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) EMC Corporation. All rights reserved.
  -->

<!-- The initial version is generated by maven-plugin-tools 3.2 on 2015-07-10 -->
<!-- todo: there needs an additional tool to auto produce it in Gradle build -->
<plugin>
  <name>radl-maven Maven Plugin</name>
  <description>Maven plugin for RADL tool</description>
  <groupId>radl</groupId>
  <artifactId>radl-maven</artifactId>
  <version>@radl-maven-version@</version>
  <goalPrefix>radl-maven</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>radl2spring</goal>
      <description>Maven plugin for generating Spring server code from the RADL file.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>radl.maven.Radl2SpringPlugin</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The base project directory. Defaults to project&apos;s root directory.</description>
        </parameter>
        <parameter>
          <name>packagePrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The prefix to use when generating Java packages. Defaults to &lt;pre&gt;radl.sample.rest.server&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>radlDirName</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of RADL files. Defaults to &lt;pre&gt;src/main/radl&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>relativeGeneratedManualSourceDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The relative directory path where the generated source codes are put.
This set of codes need further manual work.</description>
        </parameter>
        <parameter>
          <name>relativeGeneratedSourceDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The relative directory path where the generated source codes are put.
This set of codes do not need further manual work.</description>
        </parameter>
        <parameter>
          <name>scm</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The source code management system to use. Defaults to &lt;pre&gt;default&lt;/pre&gt;.
The only other valid value is &lt;pre&gt;p4&lt;/pre&gt; for Perforce.</description>
        </parameter>
        <parameter>
          <name>serviceName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the service that the RADL files describe. Defaults to the project&apos;s name.</description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}">${baseDir}</baseDir>
        <packagePrefix implementation="java.lang.String" default-value="radl.sample.rest.server">${packagePrefix}</packagePrefix>
        <radlDirName implementation="java.io.File" default-value="${project.basedir}/src/main/radl">${radlDirName}</radlDirName>
        <relativeGeneratedManualSourceDir implementation="java.lang.String" default-value="${project.build.directory}/generated-src/manual">${relativeGeneratedManualSourceDir}</relativeGeneratedManualSourceDir>
        <relativeGeneratedSourceDir implementation="java.lang.String" default-value="${project.build.directory}/generated-src/java">${relativeGeneratedSourceDir}</relativeGeneratedSourceDir>
        <scm implementation="java.lang.String" default-value="default">${scm}</scm>
        <serviceName implementation="java.lang.String" default-value="${project.name}">${serviceName}</serviceName>
      </configuration>
    </mojo>
    <mojo>
      <goal>validateRadl</goal>
      <description>RADL Maven plugin for RADL validation.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>radl.maven.RadlValidationPlugin</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>failOnValidationErrors</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifying whether to fail on receiving validation errors or ignore errors.
Defaults to &lt;pre&gt;true&lt;/pre&gt;, which means to fail on errors.</description>
        </parameter>
        <parameter>
          <name>issueFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output issue file reported by the validation. Defaults to &lt;pre&gt;target/radl/radl-issues.xml&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>radlDirName</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of RADL files. Defaults to &lt;pre&gt;src/main/radl&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>serviceName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the service that the RADL files describe. Defaults to the project&apos;s name.</description>
        </parameter>
      </parameters>
      <configuration>
        <failOnValidationErrors implementation="boolean" default-value="true">${failOnValidationErrors}</failOnValidationErrors>
        <issueFile implementation="java.io.File" default-value="${project.build.directory}/radl/radl-issues.xml">${issueFile}</issueFile>
        <radlDirName implementation="java.io.File" default-value="${project.basedir}/src/main/radl">${radlDirName}</radlDirName>
        <serviceName implementation="java.lang.String" default-value="${project.name}">${serviceName}</serviceName>
      </configuration>
    </mojo>
    <mojo>
      <goal>radlFromCode</goal>
      <description>Maven plugin for extracting RADL file from the Java server code.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>radl.maven.RadlFromCodePlugin</implementation>
      <language>java</language>
      <instantiationStrategy>keep-alive</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>argumentFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The argument file containing argument properties for the RADL extraction. If it is not specified,
the plugin will create a temporary argument file with the minimal configuration. If it is specified,
other parameters in this plugin will be merged into the argument file.</description>
        </parameter>
        <parameter>
          <name>classpathScope</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The classpath scope which is used for the compilation of the RADL extraction from code.
Available values are: &lt;pre&gt;runtime&lt;/pre&gt;, &lt;pre&gt;compile&lt;/pre&gt;, &lt;pre&gt;test&lt;/pre&gt; and &lt;pre&gt;system&lt;/pre&gt;.
Defaults to &lt;pre&gt;runtime&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>configurationFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The additional configuration file containing configuration properties for the RADL extraction.</description>
        </parameter>
        <parameter>
          <name>docsDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The sub-directory of the project build directory into which RADL is generated.
Defaults to &lt;pre&gt;target/radl&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>pluginDependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>The enclosing plugin dependencies.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The enclosing project.</description>
        </parameter>
        <parameter>
          <name>serviceName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the service that the RADL files describe. Defaults to the project&apos;s name.</description>
        </parameter>
        <parameter>
          <name>srcDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The source code file directory to scan for RADL extraction. Defaults to the project&apos;s java src dir.</description>
        </parameter>
      </parameters>
      <configuration>
        <argumentFile implementation="java.io.File">${argumentFile}</argumentFile>
        <classpathScope implementation="java.lang.String" default-value="runtime">${classpathScope}</classpathScope>
        <configurationFile implementation="java.io.File">${configurationFile}</configurationFile>
        <docsDir implementation="java.io.File" default-value="${project.build.directory}/radl">${docsDir}</docsDir>
        <pluginDependencies implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <serviceName implementation="java.lang.String" default-value="${project.name}">${serviceName}</serviceName>
        <srcDir implementation="java.io.File" default-value="${project.basedir}/src/main/java">${srcDir}</srcDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on radl-maven.&lt;br/&gt;
Call &lt;code&gt;mvn radl-maven:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>radl.maven.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>radl2docs</goal>
      <description>Maven plugin for generating HTML documentation from the RADL file.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>radl.maven.Radl2HtmlDocPlugin</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>docsDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The sub-directory of the project build directory into which documentation is generated.
Defaults to &lt;pre&gt;target/radl&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>radlDirName</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of RADL files. Defaults to &lt;pre&gt;src/main/radl&lt;/pre&gt;.</description>
        </parameter>
        <parameter>
          <name>serviceName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the service that the RADL files describe. Defaults to the project&apos;s name.</description>
        </parameter>
        <parameter>
          <name>cssURL</name>
          <type>java.net.URL</type>
          <required>false</required>
          <editable>true</editable>
          <description>The css file to produce the HTML documentation. Defaults to RADL default css.</description>
        </parameter>
        <parameter>
          <name>hideLocation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>True to hide resource location in the HTML documentation. False to show the resource location.</description>
        </parameter>
      </parameters>
      <configuration>
        <cssFile implementation="java.net.URL" default-value="">${cssURL}</cssFile>
        <hideLocation implementation="boolean" default-value="false">${hideLocation}</hideLocation>
        <docsDir implementation="java.io.File" default-value="${project.build.directory}/radl">${docsDir}</docsDir>
        <radlDirName implementation="java.io.File" default-value="${project.basedir}/src/main/radl">${radlDirName}</radlDirName>
        <serviceName implementation="java.lang.String" default-value="${project.name}">${serviceName}</serviceName>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>radl</groupId>
      <artifactId>radl-core</artifactId>
      <type>jar</type>
      <version>@radl-core-version@</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <type>jar</type>
      <version>9.6.0-4</version>
    </dependency>
    <dependency>
      <groupId>com.thaiopensource</groupId>
      <artifactId>jing</artifactId>
      <type>jar</type>
      <version>20091111</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <type>jar</type>
      <version>2.9.1</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <type>jar</type>
      <version>1.0.b2</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>16.0</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <type>jar</type>
      <version>1.8.2</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>isorelax</groupId>
      <artifactId>isorelax</artifactId>
      <type>jar</type>
      <version>20030108</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <type>jar</type>
      <version>1.1.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-tools-api</artifactId>
      <type>jar</type>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-tools-generators</artifactId>
      <type>jar</type>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.1.8</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-commons</artifactId>
      <type>jar</type>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-tree</artifactId>
      <type>jar</type>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <type>jar</type>
      <version>r938</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0.8</version>
    </dependency>
  </dependencies>
</plugin>